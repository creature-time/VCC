name: 'Deploy'
on:
  workflow_dispatch:
  push:
    branches:
      - main
      - 'actions'
#    paths: * # source.json

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

env:
  listPublishDirectory: 'Website'
  pathToCi: ci

jobs:

  generate-matrix:
    name: Generate Package Matrix
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.generateMatrix.outputs.matrix }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Get Repo Owner
        id: getRepoOwner
        #run: echo prop=$(echo '${{ github.repository_owner }}' | tr '[:upper:]' '[:lower:]') >> $GITHUB_OUTPUT #grab the repo owner and make it lowercase
        run: echo prop=$(echo '${{ env.overrideOwnerString }}' | tr '[:upper:]' '[:lower:]') >> $GITHUB_OUTPUT #grab the repo owner and make it lowercase
      - name: Set Matrix
        id: generateMatrix
        #Multiline string for dumb reasons
        run: |
          TEMP=""
          for package in $(find Packages -maxdepth 1 -mindepth 1 -type d -name "com.creaturetime.*"); do
            packageID=${package##*/}
            TEMP="$TEMP\"$packageID\", "
          done
          TEMP=${TEMP::-2}
          TEMP="$TEMP"
          echo "matrix=[$TEMP]" >> $GITHUB_OUTPUT
      - name: Output Matrix
        run: echo ${{ steps.generateMatrix.outputs.matrix }}

  build-listing:
    name: build-listing
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@v4 # check out this repo
      - uses: actions/checkout@v4 # check out automation repo
        with:
          repository: vrchat-community/package-list-action
          path: ${{env.pathToCi}}
          clean: false # otherwise the local repo will no longer be checked out

      - name: Restore Cache
        uses: actions/cache@v3
        with:
          path: |
            ${{env.pathToCi}}/.nuke/temp
            ~/.nuget/packages
          key: ${{ runner.os }}-${{ hashFiles('**/global.json', '**/*.csproj') }}

      - name: Build Package Version Listing
        run: ${{env.pathToCi}}/build.cmd BuildMultiPackageListing --root ${{env.pathToCi}} --list-publish-directory $GITHUB_WORKSPACE/${{env.listPublishDirectory}}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Pages
        uses: actions/configure-pages@v3

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          name: 'github-pages'
          path: ${{env.listPublishDirectory}}

      - name: Deploy to GitHub Pages
        # if: github.repository == main
        id: deployment
        uses: actions/deploy-pages@v4
